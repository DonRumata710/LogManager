name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    if: github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          vsversion: 2022

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.8.3
          arch: win64_msvc2022_64
          host: 'windows'
          target: 'desktop'
          modules: 'qt5compat'

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache-deps
        with:
          key: ${{ runner.os }}-deps-${{ hashFiles('deps/**') }}
          restore-keys: ${{ runner.os }}-deps-
          path: deps

      - name: Download ZLib
        if: steps.cache-deps.outputs.cache-hit != 'true'
        uses: robinraju/release-downloader@v1
        with:
          repository: 'madler/zlib'
          tag: 'v1.3.1'
          fileName: '*.zip'
          out-file-path: 'external/libs'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ZLib
        if: steps.cache-deps.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $installPath = Join-Path $Env:GITHUB_WORKSPACE 'deps/win64/Release/zlib'
          cd external/libs
          7z x zlib131.zip
          cd "zlib-1.3.1"
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$installPath"
          cmake --build build --config Release --parallel
          cmake --install build --config Release
          cd ../../..

      - name: Download QuaZip
        if: steps.cache-deps.outputs.cache-hit != 'true'
        uses: robinraju/release-downloader@v1
        with:
          repository: 'stachenov/quazip'
          tag: 'v1.5'
          zipBall: true
          out-file-path: 'external/libs'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build QuaZip
        if: steps.cache-deps.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $zlibPath = Join-Path $Env:GITHUB_WORKSPACE 'deps/win64/Release/zlib'
          $installPath = Join-Path $Env:GITHUB_WORKSPACE "deps/win64/Release/quazip"
          cd external/libs
          $zip = Get-ChildItem -Filter '*.zip' | Select-Object -First 1
          7z x $zip.FullName
          $dir = Get-ChildItem -Directory | Where-Object { $_.Name -like 'stachenov-quazip-*' } | Select-Object -First 1
          cd $dir.Name
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$installPath" -DCMAKE_PREFIX_PATH="${env:QT_ROOT_DIR};$zlibPath" -DQUAZIP_QT_MAJOR_VERSION=6 -DQUAZIP_BZIP2=OFF
          cmake --build build --config Release --parallel
          cmake --install build --config Release
          cd ../../..

      - name: Configure
        run: |
          $depsPath = Join-Path $Env:GITHUB_WORKSPACE "deps"
          $depsPath = $depsPath -replace '\\','/'
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DLOCAL_HINTS="$depsPath"

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Create artifacts
        run: cmake --build build --target release_packet

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag }}
          name: ${{ inputs.name }}
          body: ${{ inputs.notes }}
          draft: false
          prerelease: false
          files: build/output/*
